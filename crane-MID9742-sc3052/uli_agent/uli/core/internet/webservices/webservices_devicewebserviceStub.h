/* webservices_devicewebserviceStub.h
   Generated by gSOAP 2.7.15 from webservices_devicewebservice.h
   Copyright(C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef webservices_devicewebserviceStub_H
#define webservices_devicewebserviceStub_H
#define SOAP_NAMESPACE_OF_ns2	"http://uws.updatelogic.com/2010/04/DeviceWebService/Imports"
#define SOAP_NAMESPACE_OF_ns3	"http://uws.updatelogic.com/2010/04/DeviceWebService"
#define SOAP_NAMESPACE_OF_ns4	"http://schemas.microsoft.com/2003/10/Serialization/"
#ifndef WITH_NONAMESPACES
#define WITH_NONAMESPACES
#endif
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (14)
/* xsd:boolean */
enum xsd__boolean {xsd__boolean__false_ = 0, xsd__boolean__true_ = 1};
#endif

#ifndef SOAP_TYPE_ns3__FaultType1
#define SOAP_TYPE_ns3__FaultType1 (19)
/* ns3:FaultType1 */
enum ns3__FaultType1 {ns3__FaultType1__Unknown = 0, ns3__FaultType1__BadParameter = 1, ns3__FaultType1__NotSupported = 2};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#if 0 /* volatile type: do not redeclare here */

#endif

#ifndef SOAP_TYPE_xsd__base64Binary
#define SOAP_TYPE_xsd__base64Binary (10)
/* Base64 schema type: */
struct xsd__base64Binary
{
	unsigned char *__ptr;
	int __size;
	char *id;	/* optional element of type xsd:string */
	char *type;	/* optional element of type xsd:string */
	char *options;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ns3__Fault1
#define SOAP_TYPE_ns3__Fault1 (23)
/* ns3:Fault1 */
struct ns3__Fault1
{
	char *ErrorMessage;	/* optional element of type xsd:string */
	char *Type;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns3__Ping1
#define SOAP_TYPE__ns3__Ping1 (24)
/* ns3:Ping1 */
struct _ns3__Ping1
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE__ns3__Ping1Response
#define SOAP_TYPE__ns3__Ping1Response (25)
/* ns3:Ping1Response */
struct _ns3__Ping1Response
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE__ns3__GetWsProtocolVersion1
#define SOAP_TYPE__ns3__GetWsProtocolVersion1 (26)
/* ns3:GetWsProtocolVersion1 */
struct _ns3__GetWsProtocolVersion1
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE__ns3__GetWsProtocolVersion1Response
#define SOAP_TYPE__ns3__GetWsProtocolVersion1Response (27)
/* ns3:GetWsProtocolVersion1Response */
struct _ns3__GetWsProtocolVersion1Response
{
	int *GetWsProtocolVersion1Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE__ns3__Hello1
#define SOAP_TYPE__ns3__Hello1 (29)
/* ns3:Hello1 */
struct _ns3__Hello1
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE__ns3__Hello1Response
#define SOAP_TYPE__ns3__Hello1Response (30)
/* ns3:Hello1Response */
struct _ns3__Hello1Response
{
	char *Hello1Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns3__Echo1
#define SOAP_TYPE__ns3__Echo1 (31)
/* ns3:Echo1 */
struct _ns3__Echo1
{
	char *input;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns3__Echo1Response
#define SOAP_TYPE__ns3__Echo1Response (32)
/* ns3:Echo1Response */
struct _ns3__Echo1Response
{
	char *Echo1Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns3__Control1
#define SOAP_TYPE__ns3__Control1 (33)
/* ns3:Control1 */
struct _ns3__Control1
{
	char *input;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE__ns3__Control1Response
#define SOAP_TYPE__ns3__Control1Response (34)
/* ns3:Control1Response */
struct _ns3__Control1Response
{
	char *Control1Result;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (35)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	struct ns3__Fault1 *ns3__Fault1;	/* optional element of type ns3:Fault1 */
	enum ns3__FaultType1 *ns3__FaultType1;	/* optional element of type ns3:FaultType1 */
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE___ns1__Ping1
#define SOAP_TYPE___ns1__Ping1 (43)
/* Operation wrapper: */
struct __ns1__Ping1
{
	struct _ns3__Ping1 *ns3__Ping1;	/* optional element of type ns3:Ping1 */
};
#endif

#ifndef SOAP_TYPE___ns1__GetWsProtocolVersion1
#define SOAP_TYPE___ns1__GetWsProtocolVersion1 (47)
/* Operation wrapper: */
struct __ns1__GetWsProtocolVersion1
{
	struct _ns3__GetWsProtocolVersion1 *ns3__GetWsProtocolVersion1;	/* optional element of type ns3:GetWsProtocolVersion1 */
};
#endif

#ifndef SOAP_TYPE___ns1__Hello1
#define SOAP_TYPE___ns1__Hello1 (51)
/* Operation wrapper: */
struct __ns1__Hello1
{
	struct _ns3__Hello1 *ns3__Hello1;	/* optional element of type ns3:Hello1 */
};
#endif

#ifndef SOAP_TYPE___ns1__Echo1
#define SOAP_TYPE___ns1__Echo1 (55)
/* Operation wrapper: */
struct __ns1__Echo1
{
	struct _ns3__Echo1 *ns3__Echo1;	/* optional element of type ns3:Echo1 */
};
#endif

#ifndef SOAP_TYPE___ns1__Control1
#define SOAP_TYPE___ns1__Control1 (59)
/* Operation wrapper: */
struct __ns1__Control1
{
	struct _ns3__Control1 *ns3__Control1;	/* optional element of type ns3:Control1 */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (60)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (61)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (63)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (64)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (6)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE_xsd__ID
#define SOAP_TYPE_xsd__ID (7)
typedef char *xsd__ID;
#endif

#ifndef SOAP_TYPE_xsd__IDREF
#define SOAP_TYPE_xsd__IDREF (8)
typedef char *xsd__IDREF;
#endif

#ifndef SOAP_TYPE_xsd__anyURI
#define SOAP_TYPE_xsd__anyURI (9)
typedef char *xsd__anyURI;
#endif

#ifndef SOAP_TYPE_xsd__byte
#define SOAP_TYPE_xsd__byte (15)
typedef char xsd__byte;
#endif

#ifndef SOAP_TYPE_xsd__decimal
#define SOAP_TYPE_xsd__decimal (16)
typedef char *xsd__decimal;
#endif

#ifndef SOAP_TYPE_xsd__duration
#define SOAP_TYPE_xsd__duration (17)
typedef char *xsd__duration;
#endif

#ifndef SOAP_TYPE_xsd__unsignedByte
#define SOAP_TYPE_xsd__unsignedByte (18)
typedef unsigned char xsd__unsignedByte;
#endif

#ifndef SOAP_TYPE_ns4__char
#define SOAP_TYPE_ns4__char (20)
typedef int ns4__char;
#endif

#ifndef SOAP_TYPE_ns4__duration
#define SOAP_TYPE_ns4__duration (21)
typedef char *ns4__duration;
#endif

#ifndef SOAP_TYPE_ns4__guid
#define SOAP_TYPE_ns4__guid (22)
typedef char *ns4__guid;
#endif


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Ping1(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__Ping1 *ns3__Ping1, struct _ns3__Ping1Response *ns3__Ping1Response);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__GetWsProtocolVersion1(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__GetWsProtocolVersion1 *ns3__GetWsProtocolVersion1, struct _ns3__GetWsProtocolVersion1Response *ns3__GetWsProtocolVersion1Response);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Hello1(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__Hello1 *ns3__Hello1, struct _ns3__Hello1Response *ns3__Hello1Response);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Echo1(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__Echo1 *ns3__Echo1, struct _ns3__Echo1Response *ns3__Echo1Response);

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns1__Control1(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct _ns3__Control1 *ns3__Control1, struct _ns3__Control1Response *ns3__Control1Response);

#ifdef __cplusplus
}
#endif

#endif

/* End of webservices_devicewebserviceStub.h */
