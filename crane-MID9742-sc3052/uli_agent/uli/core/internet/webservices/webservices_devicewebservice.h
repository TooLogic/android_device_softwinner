/* webservices_devicewebservice.h
   Generated by wsdl2h 1.2.15 from http://10.2.32.122:8080/2010/04/DeviceWebService.svc?wsdl and typemap.dat
   2010-11-18 13:44:23 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2009 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Build Notes

NOTE:

 - Run soapcpp2 on webservices_devicewebservice.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
GPL or Genivia's license for commercial use.

GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
A commercial use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://tempuri.org/                                                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://tempuri.org/"
ns2 = "http://uws.updatelogic.com/2010/04/DeviceWebService/Imports"
ns3 = "http://uws.updatelogic.com/2010/04/DeviceWebService"
ns4 = "http://schemas.microsoft.com/2003/10/Serialization/"

*/

#define SOAP_NAMESPACE_OF_ns2	"http://uws.updatelogic.com/2010/04/DeviceWebService/Imports"
//gsoap ns2   schema namespace:	http://uws.updatelogic.com/2010/04/DeviceWebService/Imports
//gsoap ns2   schema form:	unqualified

#define SOAP_NAMESPACE_OF_ns3	"http://uws.updatelogic.com/2010/04/DeviceWebService"
//gsoap ns3   schema namespace:	http://uws.updatelogic.com/2010/04/DeviceWebService
//gsoap ns3   schema elementForm:	qualified
//gsoap ns3   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns4	"http://schemas.microsoft.com/2003/10/Serialization/"
//gsoap ns4   schema namespace:	http://schemas.microsoft.com/2003/10/Serialization/
//gsoap ns4   schema form:	qualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/// Primitive built-in type "xs:ID"
typedef char* xsd__ID;

/// Primitive built-in type "xs:IDREF"
typedef char* xsd__IDREF;

/// Primitive built-in type "xs:anyURI"
typedef char* xsd__anyURI;

/// Built-in type "xs:base64Binary".
struct xsd__base64Binary
{	unsigned char *__ptr;
	int __size;
	char *id, *type, *options; // NOTE: for DIME and MTOM XOP attachments only
};

/// Built-in type "xs:boolean".
enum xsd__boolean { xsd__boolean__false_, xsd__boolean__true_ };

/// Built-in type "xs:byte".
typedef char xsd__byte;

/// Primitive built-in type "xs:decimal"
typedef char* xsd__decimal;

/// Primitive built-in type "xs:duration"
typedef char* xsd__duration;

/// Built-in type "xs:unsignedByte".
typedef unsigned char xsd__unsignedByte;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://uws.updatelogic.com/2010/04/DeviceWebService/Imports              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://uws.updatelogic.com/2010/04/DeviceWebService                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/// "http://uws.updatelogic.com/2010/04/DeviceWebService":FaultType1 is a simpleType restriction of xs:string.
/// Note: enum values are prefixed with 'ns3__FaultType1' to avoid name clashes, please use wsdl2h option -e to omit this prefix
enum ns3__FaultType1
{
	ns3__FaultType1__Unknown,	///< xs:string value="Unknown"
	ns3__FaultType1__BadParameter,	///< xs:string value="BadParameter"
	ns3__FaultType1__NotSupported,	///< xs:string value="NotSupported"
};

/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/// "http://schemas.microsoft.com/2003/10/Serialization/":char is a simpleType restriction of xs:int.
typedef int ns4__char;

/// "http://schemas.microsoft.com/2003/10/Serialization/":duration is a simpleType restriction of xs:duration.
/// Content pattern is "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?" (note: not automatically enforced)
/// Value range is [-P10675199DT2H48M5.4775808S..P10675199DT2H48M5.4775807S]
typedef xsd__duration ns4__duration "\\-?P(\\d*D)?(T(\\d*H)?(\\d*M)?(\\d*(\\.\\d*)?S)?)?";

/// "http://schemas.microsoft.com/2003/10/Serialization/":guid is a simpleType restriction of xs:string.
/// Content pattern is "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}" (note: not automatically enforced)
typedef char* ns4__guid "[\\da-fA-F]{8}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{4}-[\\da-fA-F]{12}";

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://uws.updatelogic.com/2010/04/DeviceWebService/Imports              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://uws.updatelogic.com/2010/04/DeviceWebService                      *
 *                                                                            *
\******************************************************************************/


/// "http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1 is a complexType.
struct ns3__Fault1
{
/// Element ErrorMessage of type xs:string.
    char*                                ErrorMessage                   0;	///< Nullable pointer.
/// Element Type of type xs:string.
    char*                                Type                           0;	///< Nullable pointer.
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":Ping1

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":Ping1 is a complexType.
struct _ns3__Ping1
{
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":Ping1Response

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":Ping1Response is a complexType.
struct _ns3__Ping1Response
{
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":GetWsProtocolVersion1

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":GetWsProtocolVersion1 is a complexType.
struct _ns3__GetWsProtocolVersion1
{
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":GetWsProtocolVersion1Response

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":GetWsProtocolVersion1Response is a complexType.
struct _ns3__GetWsProtocolVersion1Response
{
/// Element GetWsProtocolVersion1Result of type xs:int.
    int*                                 GetWsProtocolVersion1Result    0;	///< Optional element.
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":Hello1

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":Hello1 is a complexType.
struct _ns3__Hello1
{
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":Hello1Response

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":Hello1Response is a complexType.
struct _ns3__Hello1Response
{
/// Element Hello1Result of type xs:string.
    char*                                Hello1Result                   0;	///< Nullable pointer.
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":Echo1

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":Echo1 is a complexType.
struct _ns3__Echo1
{
/// Element input of type xs:string.
    char*                                input                          0;	///< Nullable pointer.
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":Echo1Response

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":Echo1Response is a complexType.
struct _ns3__Echo1Response
{
/// Element Echo1Result of type xs:string.
    char*                                Echo1Result                    0;	///< Nullable pointer.
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":Control1

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":Control1 is a complexType.
struct _ns3__Control1
{
/// Element input of type xs:string.
    char*                                input                          0;	///< Nullable pointer.
};


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":Control1Response

/// "http://uws.updatelogic.com/2010/04/DeviceWebService":Control1Response is a complexType.
struct _ns3__Control1Response
{
/// Element Control1Result of type xs:string.
    char*                                Control1Result                 0;	///< Nullable pointer.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://uws.updatelogic.com/2010/04/DeviceWebService/Imports              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://uws.updatelogic.com/2010/04/DeviceWebService/Imports              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://uws.updatelogic.com/2010/04/DeviceWebService                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":FaultType1 of type "http://uws.updatelogic.com/2010/04/DeviceWebService":FaultType1.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1 of type "http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://uws.updatelogic.com/2010/04/DeviceWebService                      *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyType of type xs:anyType.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":anyURI of type xs:anyURI.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":base64Binary of type xs:base64Binary.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":boolean of type xs:boolean.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":byte of type xs:byte.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":dateTime of type xs:dateTime.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":decimal of type xs:decimal.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":double of type xs:double.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":float of type xs:float.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":int of type xs:int.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":long of type xs:long.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":QName of type xs:QName.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":short of type xs:short.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":string of type xs:string.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedByte of type xs:unsignedByte.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedInt of type xs:unsignedInt.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedLong of type xs:unsignedLong.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":unsignedShort of type xs:unsignedShort.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":char of type "http://schemas.microsoft.com/2003/10/Serialization/":char.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":duration of type "http://schemas.microsoft.com/2003/10/Serialization/":duration.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/// Top-level root element "http://schemas.microsoft.com/2003/10/Serialization/":guid of type "http://schemas.microsoft.com/2003/10/Serialization/":guid.
/// Note: use wsdl2h option -g to auto-generate a top-level root element declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://schemas.microsoft.com/2003/10/Serialization/                      *
 *                                                                            *
\******************************************************************************/


/// Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":FactoryType of simpleType xs:QName.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Id of simpleType xs:ID.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/// Top-level attribute "http://schemas.microsoft.com/2003/10/Serialization/":Ref of simpleType xs:IDREF.
/// Note: use wsdl2h option -g to auto-generate a top-level attribute declaration and processing code.

/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	BasicHttpBinding_USCOREIWebService 
//gsoap ns1  service type:	IWebService 
//gsoap ns1  service port:	http://chrisnigbur-l.updatelogic.lan:8080/2010/04/DeviceWebService.svc 
//gsoap ns1  service namespace:	http://tempuri.org/ 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage WebService Definitions

@section WebService_bindings Service Bindings
  - @ref BasicHttpBinding_USCOREIWebService

@section WebService_more More Information
- @ref page_notes "Notes"
- @ref page_XMLDataBinding "XML Data Binding"
- @ref SOAP_ENV__Header "SOAP Header Content"
- @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page BasicHttpBinding_USCOREIWebService Binding "BasicHttpBinding_USCOREIWebService"

@section BasicHttpBinding_USCOREIWebService_operations Operations of Binding  "BasicHttpBinding_USCOREIWebService"
  - @ref __ns1__Ping1
  - @ref __ns1__GetWsProtocolVersion1
  - @ref __ns1__Hello1
  - @ref __ns1__Echo1
  - @ref __ns1__Control1

@section BasicHttpBinding_USCOREIWebService_ports Endpoints of Binding  "BasicHttpBinding_USCOREIWebService"
  - http://chrisnigbur-l.updatelogic.lan:8080/2010/04/DeviceWebService.svc

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * SOAP Fault Detail                                                          *
 *                                                                            *
\******************************************************************************/

/**

The SOAP Fault is part of the gSOAP context and its content is accessed
through the soap.fault->detail variable (SOAP 1.1) or the
soap.fault->SOAP_ENV__Detail variable (SOAP 1.2).
Use option -j to omit.

*/
struct SOAP_ENV__Detail
{
// xsd:anyAttribute omitted: to parse attribute content of the Detail element into DOM anyAttribute, use wsdl2h option -d.
    struct ns3__Fault1*                  ns3__Fault1                   ;
///< SOAP Fault element ""http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1" part "detail"
///< SOAP Fault element ""http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1" part "detail"
///< SOAP Fault element ""http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1" part "detail"
///< SOAP Fault element ""http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1" part "detail"
///< SOAP Fault element ""http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1" part "detail"
    enum ns3__FaultType1*                ns3__FaultType1               ;
///< SOAP Fault element ""http://uws.updatelogic.com/2010/04/DeviceWebService":FaultType1" part "detail"
    int                                  __type                        ;	///< set to SOAP_TYPE_X for a serializable type X
    void                                *fault                         ;	///< points to serializable object X or NULL
    _XML                                 __any                         ;	///< Catch any element content in XML string.
};

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   BasicHttpBinding_USCOREIWebService                                       *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Ping1                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Ping1" of service binding "BasicHttpBinding_USCOREIWebService"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/Ping1"
  - SOAP Fault: "http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1 (literal)
  - SOAP Fault: "http://uws.updatelogic.com/2010/04/DeviceWebService":FaultType1 (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Ping1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns3__Ping1*                 ns3__Ping1,
    // response parameters:
    struct _ns3__Ping1Response*         ns3__Ping1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Ping1(
    struct soap *soap,
    // request parameters:
    struct _ns3__Ping1*                 ns3__Ping1,
    // response parameters:
    struct _ns3__Ping1Response*         ns3__Ping1Response
  );
@endcode

*/

//gsoap ns1  service method-style:	Ping1 document
//gsoap ns1  service method-encoding:	Ping1 literal
//gsoap ns1  service method-action:	Ping1 http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/Ping1
//gsoap ns1  service method-fault:	Ping1 ns3__Fault1
//gsoap ns1  service method-fault:	Ping1 ns3__FaultType1
int __ns1__Ping1(
    struct _ns3__Ping1*                 ns3__Ping1,	///< Request parameter
    struct _ns3__Ping1Response*         ns3__Ping1Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetWsProtocolVersion1                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetWsProtocolVersion1" of service binding "BasicHttpBinding_USCOREIWebService"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/GetWsProtocolVersion1"
  - SOAP Fault: "http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1 (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetWsProtocolVersion1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns3__GetWsProtocolVersion1* ns3__GetWsProtocolVersion1,
    // response parameters:
    struct _ns3__GetWsProtocolVersion1Response* ns3__GetWsProtocolVersion1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetWsProtocolVersion1(
    struct soap *soap,
    // request parameters:
    struct _ns3__GetWsProtocolVersion1* ns3__GetWsProtocolVersion1,
    // response parameters:
    struct _ns3__GetWsProtocolVersion1Response* ns3__GetWsProtocolVersion1Response
  );
@endcode

*/

//gsoap ns1  service method-style:	GetWsProtocolVersion1 document
//gsoap ns1  service method-encoding:	GetWsProtocolVersion1 literal
//gsoap ns1  service method-action:	GetWsProtocolVersion1 http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/GetWsProtocolVersion1
//gsoap ns1  service method-fault:	GetWsProtocolVersion1 ns3__Fault1
int __ns1__GetWsProtocolVersion1(
    struct _ns3__GetWsProtocolVersion1* ns3__GetWsProtocolVersion1,	///< Request parameter
    struct _ns3__GetWsProtocolVersion1Response* ns3__GetWsProtocolVersion1Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Hello1                                                            *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Hello1" of service binding "BasicHttpBinding_USCOREIWebService"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/Hello1"
  - SOAP Fault: "http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1 (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Hello1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns3__Hello1*                ns3__Hello1,
    // response parameters:
    struct _ns3__Hello1Response*        ns3__Hello1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Hello1(
    struct soap *soap,
    // request parameters:
    struct _ns3__Hello1*                ns3__Hello1,
    // response parameters:
    struct _ns3__Hello1Response*        ns3__Hello1Response
  );
@endcode

*/

//gsoap ns1  service method-style:	Hello1 document
//gsoap ns1  service method-encoding:	Hello1 literal
//gsoap ns1  service method-action:	Hello1 http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/Hello1
//gsoap ns1  service method-fault:	Hello1 ns3__Fault1
int __ns1__Hello1(
    struct _ns3__Hello1*                ns3__Hello1,	///< Request parameter
    struct _ns3__Hello1Response*        ns3__Hello1Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Echo1                                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Echo1" of service binding "BasicHttpBinding_USCOREIWebService"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/Echo1"
  - SOAP Fault: "http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1 (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Echo1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns3__Echo1*                 ns3__Echo1,
    // response parameters:
    struct _ns3__Echo1Response*         ns3__Echo1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Echo1(
    struct soap *soap,
    // request parameters:
    struct _ns3__Echo1*                 ns3__Echo1,
    // response parameters:
    struct _ns3__Echo1Response*         ns3__Echo1Response
  );
@endcode

*/

//gsoap ns1  service method-style:	Echo1 document
//gsoap ns1  service method-encoding:	Echo1 literal
//gsoap ns1  service method-action:	Echo1 http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/Echo1
//gsoap ns1  service method-fault:	Echo1 ns3__Fault1
int __ns1__Echo1(
    struct _ns3__Echo1*                 ns3__Echo1,	///< Request parameter
    struct _ns3__Echo1Response*         ns3__Echo1Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__Control1                                                          *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__Control1" of service binding "BasicHttpBinding_USCOREIWebService"

/**

Operation details:

  - SOAP document/literal style
  - SOAP action="http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/Control1"
  - SOAP Fault: "http://uws.updatelogic.com/2010/04/DeviceWebService":Fault1 (literal)

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__Control1(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns3__Control1*              ns3__Control1,
    // response parameters:
    struct _ns3__Control1Response*      ns3__Control1Response
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__Control1(
    struct soap *soap,
    // request parameters:
    struct _ns3__Control1*              ns3__Control1,
    // response parameters:
    struct _ns3__Control1Response*      ns3__Control1Response
  );
@endcode

*/

//gsoap ns1  service method-style:	Control1 document
//gsoap ns1  service method-encoding:	Control1 literal
//gsoap ns1  service method-action:	Control1 http://uws.updatelogic.com/2010/04/DeviceWebService/IWebService/Control1
//gsoap ns1  service method-fault:	Control1 ns3__Fault1
int __ns1__Control1(
    struct _ns3__Control1*              ns3__Control1,	///< Request parameter
    struct _ns3__Control1Response*      ns3__Control1Response	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings are adopted from XML schemas as part of the WSDL types section or when running wsdl2h on a set of schemas.

The following readers and writers are C/C++ data type (de)serializers auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the (de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in your code to import these data type and function declarations. Only use the soapcpp2-generated files in your project build. Do not include the wsdl2h-generated .h file in your code.

XML content can be retrieved from:
  - a FILE* fd, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a FILE* fd, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns2 Top-level root elements of schema "http://uws.updatelogic.com/2010/04/DeviceWebService/Imports"

@section ns3 Top-level root elements of schema "http://uws.updatelogic.com/2010/04/DeviceWebService"

  - <ns3:FaultType1> (use wsdl2h option -g to auto-generate)

  - <ns3:Ping1> @ref _ns3__Ping1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Ping1(struct soap*, struct _ns3__Ping1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Ping1(struct soap*, struct _ns3__Ping1*);
    @endcode

  - <ns3:Ping1Response> @ref _ns3__Ping1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Ping1Response(struct soap*, struct _ns3__Ping1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Ping1Response(struct soap*, struct _ns3__Ping1Response*);
    @endcode

  - <ns3:Fault1> (use wsdl2h option -g to auto-generate)

  - <ns3:GetWsProtocolVersion1> @ref _ns3__GetWsProtocolVersion1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetWsProtocolVersion1(struct soap*, struct _ns3__GetWsProtocolVersion1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetWsProtocolVersion1(struct soap*, struct _ns3__GetWsProtocolVersion1*);
    @endcode

  - <ns3:GetWsProtocolVersion1Response> @ref _ns3__GetWsProtocolVersion1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__GetWsProtocolVersion1Response(struct soap*, struct _ns3__GetWsProtocolVersion1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__GetWsProtocolVersion1Response(struct soap*, struct _ns3__GetWsProtocolVersion1Response*);
    @endcode

  - <ns3:Hello1> @ref _ns3__Hello1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Hello1(struct soap*, struct _ns3__Hello1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Hello1(struct soap*, struct _ns3__Hello1*);
    @endcode

  - <ns3:Hello1Response> @ref _ns3__Hello1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Hello1Response(struct soap*, struct _ns3__Hello1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Hello1Response(struct soap*, struct _ns3__Hello1Response*);
    @endcode

  - <ns3:Echo1> @ref _ns3__Echo1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Echo1(struct soap*, struct _ns3__Echo1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Echo1(struct soap*, struct _ns3__Echo1*);
    @endcode

  - <ns3:Echo1Response> @ref _ns3__Echo1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Echo1Response(struct soap*, struct _ns3__Echo1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Echo1Response(struct soap*, struct _ns3__Echo1Response*);
    @endcode

  - <ns3:Control1> @ref _ns3__Control1
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Control1(struct soap*, struct _ns3__Control1*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Control1(struct soap*, struct _ns3__Control1*);
    @endcode

  - <ns3:Control1Response> @ref _ns3__Control1Response
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns3__Control1Response(struct soap*, struct _ns3__Control1Response*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns3__Control1Response(struct soap*, struct _ns3__Control1Response*);
    @endcode

@section ns4 Top-level root elements of schema "http://schemas.microsoft.com/2003/10/Serialization/"

  - <ns4:anyType> (use wsdl2h option -g to auto-generate)

  - <ns4:anyURI> (use wsdl2h option -g to auto-generate)

  - <ns4:base64Binary> (use wsdl2h option -g to auto-generate)

  - <ns4:boolean> (use wsdl2h option -g to auto-generate)

  - <ns4:byte> (use wsdl2h option -g to auto-generate)

  - <ns4:dateTime> (use wsdl2h option -g to auto-generate)

  - <ns4:decimal> (use wsdl2h option -g to auto-generate)

  - <ns4:double> (use wsdl2h option -g to auto-generate)

  - <ns4:float> (use wsdl2h option -g to auto-generate)

  - <ns4:int> (use wsdl2h option -g to auto-generate)

  - <ns4:long> (use wsdl2h option -g to auto-generate)

  - <ns4:QName> (use wsdl2h option -g to auto-generate)

  - <ns4:short> (use wsdl2h option -g to auto-generate)

  - <ns4:string> (use wsdl2h option -g to auto-generate)

  - <ns4:unsignedByte> (use wsdl2h option -g to auto-generate)

  - <ns4:unsignedInt> (use wsdl2h option -g to auto-generate)

  - <ns4:unsignedLong> (use wsdl2h option -g to auto-generate)

  - <ns4:unsignedShort> (use wsdl2h option -g to auto-generate)

  - <ns4:char> (use wsdl2h option -g to auto-generate)

  - <ns4:duration> (use wsdl2h option -g to auto-generate)

  - <ns4:guid> (use wsdl2h option -g to auto-generate)

*/

/* End of webservices_devicewebservice.h */
